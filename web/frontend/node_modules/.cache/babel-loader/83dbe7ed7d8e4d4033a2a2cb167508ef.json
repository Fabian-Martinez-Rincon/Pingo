{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juanc\\\\WebstormProjects\\\\test\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Form from \"./form\";\nimport Todo from \"./todo\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [tasks, setTasks] = useState(props.tasks);\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted\n        axios.patch(`/api/todos/${id}/`, {\n          \"completed\": !task.completed\n        });\n        return { ...task,\n          completed: !task.completed\n        };\n      }\n\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return { ...task,\n          name: newName\n        };\n      }\n\n      return task;\n    });\n    axios.patch(`/api/todos/${id}/`, {\n      \"title\": newName\n    });\n    setTasks(editedTaskList);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n    axios.delete(`/api/todos/${id}/`, {\n      \"unique\": id\n    });\n  }\n\n  const taskList = tasks.map(task => /*#__PURE__*/_jsxDEV(Todo, {\n    id: task.id,\n    name: task.name,\n    completed: task.completed,\n    toggleTaskCompleted: toggleTaskCompleted,\n    deleteTask: deleteTask,\n    editTask: editTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this));\n\n  function addTask(name) {\n    const newTask = {\n      id: Date.now(),\n      name: name,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n    axios.post(\"/api/todos/\", {\n      \"unique\": newTask.id,\n      \"title\": newTask.name,\n      \"completed\": newTask.completed\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoapp stack-large\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      role: \"list\",\n      className: \"todo-list stack-large stack-exception\",\n      \"aria-labelledby\": \"list-heading\",\n      children: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"pjFsLTHS1Kjd+NDyC2kZTexpLic=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/juanc/WebstormProjects/test/src/App.js"],"names":["Form","Todo","React","useState","axios","App","props","tasks","setTasks","toggleTaskCompleted","id","updatedTasks","map","task","patch","completed","editTask","newName","editedTaskList","name","deleteTask","remainingTasks","filter","delete","taskList","addTask","newTask","Date","now","post"],"mappings":"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","sourcesContent":["import Form from \"./form\";\nimport Todo from \"./todo\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\n\n\n\n\nfunction App(props) {\n\n\n    const [tasks, setTasks] = useState(props.tasks);\n\n\n    function toggleTaskCompleted(id) {\n        const updatedTasks = tasks.map(task => {\n            // if this task has the same ID as the edited task\n            if (id === task.id) {\n                // use object spread to make a new object\n                // whose `completed` prop has been inverted\n                axios\n                    .patch(`/api/todos/${id}/`, {\"completed\": !task.completed})\n                return {...task, completed: !task.completed}\n            }\n            return task;\n        });\n\n        setTasks(updatedTasks);\n    }\n    function editTask(id, newName) {\n        const editedTaskList = tasks.map(task => {\n            // if this task has the same ID as the edited task\n            if (id === task.id) {\n                //\n                return {...task, name: newName}\n            }\n            return task;\n        });\n        axios\n        .patch(`/api/todos/${id}/`, {\"title\": newName})\n        setTasks(editedTaskList);\n    }\n\n\n    function deleteTask(id) {\n        const remainingTasks = tasks.filter(task => id !== task.id);\n        setTasks(remainingTasks);\n        axios\n            .delete(`/api/todos/${id}/`, {\"unique\": id})\n    }\n\n\n\n    const taskList = tasks.map(task => (\n        <Todo\n            id={task.id}\n            name={task.name}\n            completed={task.completed}\n            key={task.id}\n            toggleTaskCompleted={toggleTaskCompleted}\n            deleteTask={deleteTask}\n            editTask={editTask}\n        />\n    ));\n\n\n\n\n    function addTask(name) {\n        const newTask = { id: Date.now() , name: name, completed: false };\n        setTasks([...tasks, newTask]);\n        axios\n            .post(\"/api/todos/\", {\"unique\": newTask.id, \"title\": newTask.name, \"completed\": newTask.completed})\n\n\n    }\n\n\n    return (\n        <div className=\"todoapp stack-large\">\n            <h1>Test</h1>\n            <Form addTask={addTask} />\n\n            <ul\n                role=\"list\"\n                className=\"todo-list stack-large stack-exception\"\n                aria-labelledby=\"list-heading\"\n            >\n                {taskList}\n            </ul>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}